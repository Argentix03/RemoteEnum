// CRightsDialog.cpp : implementation file
//

#include "pch.h"
#include "RemoteEnum.h"
#include "afxdialogex.h"
#include "CRightsDialog.h"
#include <ntsecapi.h>


// CRightsDialog dialog

IMPLEMENT_DYNAMIC(CRightsDialog, CDialogEx)

CRightsDialog::CRightsDialog(CWnd* pParent /*=nullptr*/)
	: CDialogEx(IDD_DIALOG1, pParent)
	, m_POLICY_ALL_ACCESS(FALSE)
	, m_POLICY_VIEW_LOCAL_INFORMATION(FALSE)
	, m_POLICY_VIEW_AUDIT_INFORMATION(FALSE)
	, m_POLICY_GET_PRIVATE_INFORMATION(FALSE)
	, m_POLICY_TRUST_ADMIN(FALSE)
	, m_POLICY_CREATE_ACCOUNT(FALSE)
	, m_POLICY_CREATE_SECRET(FALSE)
	, m_POLICY_CREATE_PRIVILEGE(FALSE)
	, m_POLICY_SET_DEFAULT_QUOTA_LIMITS(FALSE)
	, m_POLICY_SET_AUDIT_REQUIREMENTS(FALSE)
	, m_POLICY_AUDIT_LOG_ADMIN(FALSE)
	, m_POLICY_SERVER_ADMIN(FALSE)
	, m_POLICY_LOOKUP_NAMES(FALSE)
	, m_POLICY_NOTIFICATION(FALSE)
{

}

CRightsDialog::~CRightsDialog()
{
}

void CRightsDialog::DoDataExchange(CDataExchange* pDX)
{
	CDialogEx::DoDataExchange(pDX);
	DDX_Check(pDX, IDC_POLICY_ALL_ACCESS, m_POLICY_ALL_ACCESS);
	DDX_Check(pDX, IDC_POLICY_VIEW_LOCAL_INFORMATION, m_POLICY_VIEW_LOCAL_INFORMATION);
	DDX_Check(pDX, IDC_POLICY_VIEW_AUDIT_INFORMATION, m_POLICY_VIEW_AUDIT_INFORMATION);
	DDX_Check(pDX, IDC_POLICY_GET_PRIVATE_INFORMATION, m_POLICY_GET_PRIVATE_INFORMATION);
	DDX_Check(pDX, IDC_POLICY_TRUST_ADMIN, m_POLICY_TRUST_ADMIN);
	DDX_Check(pDX, IDC_POLICY_CREATE_ACCOUNT, m_POLICY_CREATE_ACCOUNT);
	DDX_Check(pDX, IDC_POLICY_CREATE_SECRET, m_POLICY_CREATE_SECRET);
	DDX_Check(pDX, IDC_POLICY_CREATE_PRIVILEGE, m_POLICY_CREATE_PRIVILEGE);
	DDX_Check(pDX, IDC_POLICY_SET_DEFAULT_QUOTA_LIMITS, m_POLICY_SET_DEFAULT_QUOTA_LIMITS);
	DDX_Check(pDX, IDC_POLICY_SET_AUDIT_REQUIREMENTS, m_POLICY_SET_AUDIT_REQUIREMENTS);
	DDX_Check(pDX, IDC_POLICY_AUDIT_LOG_ADMIN, m_POLICY_AUDIT_LOG_ADMIN);
	DDX_Check(pDX, IDC_POLICY_SERVER_ADMIN, m_POLICY_SERVER_ADMIN);
	DDX_Check(pDX, IDC_POLICY_LOOKUP_NAMES, m_POLICY_LOOKUP_NAMES);
	DDX_Check(pDX, IDC_POLICY_NOTIFICATION, m_POLICY_NOTIFICATION);
}


BEGIN_MESSAGE_MAP(CRightsDialog, CDialogEx)
END_MESSAGE_MAP()

ACCESS_MASK CRightsDialog::CalculateAccessMask()
{
    ACCESS_MASK mask = 0;

	if (m_POLICY_ALL_ACCESS) {
		mask |= POLICY_ALL_ACCESS;
		return mask;
	}
	if (m_POLICY_VIEW_LOCAL_INFORMATION) mask |= POLICY_VIEW_LOCAL_INFORMATION;
	if (m_POLICY_VIEW_AUDIT_INFORMATION) mask |= POLICY_VIEW_AUDIT_INFORMATION;
	if (m_POLICY_GET_PRIVATE_INFORMATION) mask |= POLICY_GET_PRIVATE_INFORMATION;
	if (m_POLICY_TRUST_ADMIN) mask |= POLICY_TRUST_ADMIN;
	if (m_POLICY_CREATE_ACCOUNT) mask |= POLICY_CREATE_ACCOUNT;
	if (m_POLICY_CREATE_SECRET) mask |= POLICY_CREATE_SECRET;
	if (m_POLICY_CREATE_PRIVILEGE) mask |= POLICY_CREATE_PRIVILEGE;
	if (m_POLICY_SET_DEFAULT_QUOTA_LIMITS) mask |= POLICY_SET_DEFAULT_QUOTA_LIMITS;
	if (m_POLICY_SET_AUDIT_REQUIREMENTS) mask |= POLICY_SET_AUDIT_REQUIREMENTS;
	if (m_POLICY_AUDIT_LOG_ADMIN) mask |= POLICY_AUDIT_LOG_ADMIN;
	if (m_POLICY_SERVER_ADMIN) mask |= POLICY_SERVER_ADMIN;
	if (m_POLICY_LOOKUP_NAMES) mask |= POLICY_LOOKUP_NAMES;
	if (m_POLICY_NOTIFICATION) mask |= POLICY_NOTIFICATION;

    return mask;
}

// CRightsDialog message handlers
